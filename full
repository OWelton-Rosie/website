<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Oscar Welton-Rosie</title>
  <style>
    html {
      scroll-behavior: auto;
    }
    body {
      font-family: Arial, sans-serif;
      color: #333;
      margin: 0;
      padding: 0;
      background-color: #eaeaf3;
    }
    header, section {
      padding: 20px;
      text-align: center;
    }
    header {
      background-color: #333;
      color: #fff;
    }

    nav {
      display: flex;
      justify-content: center;
      gap: 15px;
      padding: 10px 0;
    }
    .nav-link {
      color: #fff;
      text-decoration: none;
      display: inline-block;
      padding: 10px 20px;
      min-width: 120px;
      background-color: #444;
      border-radius: 4px;
      text-align: center;
      transition: background-color 0.3s ease;
    }
    .nav-link:hover {
      background-color: #ffdd57;
      color: #333;
    }

    .intro {
      background: #ffd54f;
      padding: 30px;
      margin: 10px 0;
      border-radius: 8px;
    }
    .section-title {
      color: #333;
      font-size: 1.8em;
      margin-bottom: 10px;
    }
    .skills, .work, .speedcubing, .projects, .contact {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      margin: 10px 0;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    a {
      color: #1a237e;
      text-decoration: none;
    }
    a:hover {
      color: #c6a600;
    }

    .cloudflare-link {
      color: #000;
      font-weight: bold;
      text-decoration: none;
      transition: color 0.3s ease;
    }
    .cloudflare-link:hover {
      color: #1E88E5;
      text-decoration: underline;
    }

    .footer {
      background-color: #333;
      color: #fff;
      padding: 10px;
      font-size: 0.9em;
    }
  </style>
</head>
<body>

  <header>
    <h1>Oscar Welton-Rosie</h1>
    <p>Video Editor | Programmer | Speedcuber | Student</p>
    <nav>
      <a href="#about" class="nav-link" target="_blank">About</a>
      <a href="#skills" class="nav-link" target="_blank">Skills</a>
      <a href="#speedcubing" class="nav-link" target="_blank">Speedcubing</a>
      <a href="#projects" class="nav-link" target="_blank">Projects</a>
      <a href="#contact" class="nav-link" target="_blank">Contact</a>
    </nav>
  </header>
    
  <section class="intro" id="about">
    <h2 class="section-title">About Me</h2>
    <p>Hi! I'm Oscar, a passionate video editor, enthusiastic programmer and dedicated speedcuber.</p>
    <p>As a student, I balance learning, creating, and competing in speedcubing competitions. I'm always eager to innovate and improve.</p>
  </section>

  <section class="skills" id="skills">
    <h2 class="section-title">Skills</h2>
    <p><strong>Video Editing:</strong> Proficient with <a href="https://clipchamp.com/en/" target="_blank">Microsoft Clipchamp</a> and <a href="https://www.apple.com/nz/imovie/" target="_blank">Apple iMovie</a>. Currently learning <a href="https://www.adobe.com/products/premiere.html" target="_blank">Adobe Premiere Pro</a>.</p>
    <p><strong>Programming:</strong> I use HTML, CSS, and JavaScript to create software. Check out some of my GitHub repositories <a href="https://github.com/OWelton-Rosie?tab=repositories" target="_blank">here</a>.</p>
  </section>

  <section class="speedcubing" id="speedcubing">
    <h2 class="section-title">Speedcubing</h2>
    <p>As an active speedcuber, I participate in competitions in my local area and constantly work on improving my times.</p>
    <p><strong>Favorite Puzzle Types:</strong> <a href="https://en.wikipedia.org/wiki/Rubik's_Cube" target="_blank">3x3x3</a>, <a href="https://en.wikipedia.org/wiki/Pocket_Cube" target="_blank">2x2x2</a>, and <a href="https://en.wikipedia.org/wiki/Pyraminx" target="_blank">Pyraminx</a> puzzles.</p>
    <p><strong>Best Times:</strong> Check out my in-competition results <a href="https://www.worldcubeassociation.org/persons/2023WELT02" target="_blank">here</a>.</p>
      <p><strong>YouTube Channel:</strong> My speedcubing-focused YouTube channel can be found <a href="https://www.youtube.com/@oscarW-R" target="blank"> here</a> .</p>
  </section>

  <section class="projects" id="projects">
    <h2 class="section-title">Projects</h2>
    <p>Personal Portfolio Website (which you're currently looking at!)</p>
    <p>Multiple coding projects in HTML, CSS, and JavaScript, which can be found on my <a href="https://github.com/OWelton-Rosie" target="_blank">GitHub profile</a>.</p>
  </section>

  <section class="contact" id="contact">
    <h2 class="section-title">Contact Me</h2>
      <p>I'd love to talk about speedcubing, video editing or programming! Below, I've listed the easiest ways to contact me.</p>
    <p><strong>Email:</strong> <a href="mailto:oweltonrosie@gmail.com" target="_blank">oweltonrosie@gmail.com</a></p>
    <p><strong>Discord:</strong> @iamoscar1</p>
  </section>

  <footer class="footer">
    <p>&copy; 2024 Oscar Welton-Rosie. All Rights Reserved. Powered and secured by <a href="https://cloudflare.com/" class="cloudflare-link" target="_blank">Cloudflare</a>.</p>
  </footer>

  <script>
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function(e) {
        e.preventDefault();

        const target = document.querySelector(this.getAttribute('href'));
        const targetPosition = target.getBoundingClientRect().top + window.scrollY;
        const startPosition = window.scrollY;
        const distance = targetPosition - startPosition;
        const duration = 800;
        let startTime = null;

        function animation(currentTime) {
          if (startTime === null) startTime = currentTime;
          const timeElapsed = currentTime - startTime;
          const run = ease(timeElapsed, startPosition, distance, duration);
          window.scrollTo(0, run);

          if (timeElapsed < duration) requestAnimationFrame(animation);
        }

        function ease(t, b, c, d) {
          t /= d / 2;
          if (t < 1) return c / 2 * t * t + b;
          t--;
          return -c / 2 * (t * (t - 2) - 1) + b;
        }

        requestAnimationFrame(animation);
      });
    });
  </script>

</body>
</html>
